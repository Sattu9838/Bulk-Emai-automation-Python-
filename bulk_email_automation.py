# -*- coding: utf-8 -*-
"""Bulk Email Automation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dQu4nnjWzZhmTmdKPFpgaHo2mM7xDuoG
"""

import logging

# Setup logging
logging.basicConfig(filename='email_sending.log', level=logging.INFO)

from google.colab import files
uploaded = files.upload()

import pandas as pd

# Upload the file
from google.colab import files
uploaded = files.upload()

# Read the uploaded CSV file
file_name = list(uploaded.keys())[0]  # Get the uploaded file name
df = pd.read_csv(file_name)

# Display the contents of the CSV file
print(df)

import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

def send_email(smtp_server, smtp_port, smtp_user, smtp_password, from_email, to_email, subject):
    try:
        msg = MIMEMultipart()
        msg['Email'] = from_email
        msg['Email'] = to_email
        msg['Subject'] = subject

        msg.attach(MIMEText( 'this is just for testing my model, please ignore this and really sorry for the inconveinance !'))

        server = smtplib.SMTP(smtp_server, smtp_port)
        server.starttls()
        server.login(smtp_user, smtp_password)
        server.sendmail(from_email, to_email, msg.as_string())
        server.quit()

        logging.info(f"Email sent to {to_email}")
    except Exception as e:
        logging.error(f"Failed to send email to {to_email}: {e}")

def main():
    contacts = read_contacts('contacts.csv')

    if contacts is not None:
        smtp_server = 'smtp.gmail.com'
        smtp_port = 587
        smtp_user = 'satyendravishwakarma529@gmail.com'
        smtp_password = 'Satya@529'
        from_email = smtp_user

        for index, row in contacts.iterrows():
            to_email = row['Email']
            name = row['Name']

personalized_message = f'{{\'please ignore this, it is just for testing. sorry for the disturbance !\'}}'

            send_email(smtp_server, smtp_port, smtp_user, smtp_password, from_email, to_email, personalized_message)

if __name__ == "__main__":
    main()





